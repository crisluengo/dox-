#! /usr/bin/env python3

# dox++
# Copyright 2020, Cris Luengo
#
# This file is part of dox++.  dox++ is free software),
# redistribute it and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation, version 2.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 51
# Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

import argparse
import os
import shlex
import doxpp


parser = argparse.ArgumentParser(description='dox++, C++ documentation, back-end generator.')
parser.add_argument('config_file', nargs='?', default='dox++config', help='name of the configuration file')
args = parser.parse_args()

# Processing options
config = doxpp.config.read(args.config_file)

doxpp.log.setLevel(doxpp.config.get(config, 'log', 'level'))

options = {
    'show_private': doxpp.config.get_boolean(config, 'html', 'document private members'),
    'show_protected': doxpp.config.get_boolean(config, 'html', 'document protected members'),
    'show_undocumented': doxpp.config.get_boolean(config, 'html', 'document undocumented members'),
    'extra_files': shlex.split(doxpp.config.get(config, 'html', 'extra files'), posix=False),
    'templates': doxpp.config.get(config, 'html', 'templates'),
    'source_files': shlex.split(doxpp.config.get(config, 'input', 'header files'), posix=False) +
                    shlex.split(doxpp.config.get(config, 'input', 'markdown files'), posix=False)

}

template_params = {
    'PROJECT_NAME': doxpp.config.get(config, 'project', 'name'),
    'PROJECT_BRIEF': doxpp.config.get(config, 'project', 'brief'),
    'MAIN_PROJECT_URL': doxpp.config.get(config, 'project', 'url'),
    'PROJECT_LOGO': doxpp.config.get(config, 'project', 'logo'),
    'THEME_COLOR': doxpp.config.get(config, 'html', 'theme color'),
    'FAVICON': doxpp.config.get(config, 'html', 'favicon'),
    'STYLESHEETS': shlex.split(doxpp.config.get(config, 'html', 'stylesheets'), posix=False),
    'HTML_HEADER': doxpp.config.get(config, 'html', 'html header'),
    'PAGE_HEADER': doxpp.config.get(config, 'html', 'page header'),
    'FINE_PRINT': doxpp.config.get(config, 'html', 'fine print'),
    'LINKS_NAVBAR1': [
        ('', 'pages', []),
        ('', 'modules', []),
        ('', 'namespaces', [])
    ],
    'LINKS_NAVBAR2': [
        ('', 'classes', []),
        ('', 'files', [])
    ],
    'FILE_INDEX_EXPAND_LEVELS': 1,
    'CLASS_INDEX_EXPAND_LEVELS': 1,
    'CLASS_INDEX_EXPAND_INNER': False,
    'SEARCH_DISABLED': False,
    'SEARCH_DOWNLOAD_BINARY': False,
    'SEARCH_HELP':
        """<p class="m-noindent">Search for symbols, directories, files, pages or
        modules. You can omit any prefix from the symbol or file path; adding a
        <code>:</code> or <code>/</code> suffix lists all members of given symbol or
        directory.</p>
        <p class="m-noindent">Use <span class="m-label m-dim">&darr;</span>
        / <span class="m-label m-dim">&uarr;</span> to navigate through the list,
        <span class="m-label m-dim">Enter</span> to go.
        <span class="m-label m-dim">Tab</span> autocompletes common prefix, you can
        copy a link to the result using <span class="m-label m-dim">⌘</span>
        <span class="m-label m-dim">L</span> while <span class="m-label m-dim">⌘</span>
        <span class="m-label m-dim">M</span> produces a Markdown link.</p>
        """,
    'SEARCH_BASE_URL': None,
    'SEARCH_EXTERNAL_URL': None,
    'DOC_LINK_CLASS': 'm-doc',  # not used in the templates, but used in the code; should match what is used in the templates
}

outdir = doxpp.config.get(config, 'html', 'output directory')
os.makedirs(outdir, exist_ok=True)

# Generate HTML
data = doxpp.createhtml.createhtml(
    doxpp.config.get(config, 'json', 'filename'),
    outdir,
    options,
    template_params
)
