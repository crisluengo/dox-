{
  "members": [
    {
      "id": "N",
      "name": "N",
      "brief": "Namespace N",
      "doc": "Contains [`operator==`](#N-operator%3D%3D-N-A-CL-N-A-CL), and [`operator\"\"_w`](#N-operator%22%22_w-long double-), as well as struct [`A`](#N-A).\n\nWe should be able to reference [`operator==`](#N-operator%3D%3D-N-A-CL-N-A-CL) or [`operator==(const A &, const A &)`](#N-operator%3D%3D-N-A-CL-N-A-CL)",
      "sections": [],
      "anchors": [],
      "member_type": "namespace",
      "parent": "",
      "relates": "",
      "header": "file--operator-h",
      "group": "",
      "deprecated": false,
      "members": [
        {
          "id": "N-A",
          "name": "A",
          "brief": "Struct N::A",
          "doc": "Contains [`operator<`](#N-A-operator%3C-N-A-CL), and [`operator int *`](#N-A-operator%20int%20%2A-C).",
          "sections": [],
          "anchors": [],
          "member_type": "struct",
          "parent": "N",
          "relates": "",
          "header": "file--operator-h",
          "group": "",
          "deprecated": false,
          "templated": false,
          "bases": [],
          "derived": [],
          "members": [
            {
              "id": "N-A-operator%3C-N-A-CL",
              "name": "operator<",
              "brief": "",
              "doc": "",
              "sections": [],
              "anchors": [],
              "member_type": "function",
              "parent": "N-A",
              "relates": "",
              "header": "file--operator-h",
              "group": "",
              "deprecated": false,
              "templated": false,
              "static": false,
              "virtual": false,
              "pure_virtual": false,
              "const": false,
              "access": "public",
              "constexpr": false,
              "method_type": "method",
              "return_type": {
                "typename": "bool",
                "qualifiers": "",
                "id": ""
              },
              "arguments": [
                {
                  "typename": "N::A",
                  "qualifiers": "const&",
                  "name": "other",
                  "default": null,
                  "id": "N-A"
                }
              ]
            },
            {
              "id": "N-A-operator%20int%20%2A-C",
              "name": "operator int *",
              "brief": "",
              "doc": "",
              "sections": [],
              "anchors": [],
              "member_type": "function",
              "parent": "N-A",
              "relates": "",
              "header": "file--operator-h",
              "group": "",
              "deprecated": false,
              "templated": false,
              "static": false,
              "virtual": false,
              "pure_virtual": false,
              "const": true,
              "access": "public",
              "constexpr": false,
              "method_type": "conversionfunction",
              "return_type": {
                "typename": "int",
                "qualifiers": "*",
                "id": ""
              },
              "arguments": []
            }
          ],
          "related": []
        },
        {
          "id": "N-operator%3D%3D-N-A-CL-N-A-CL",
          "name": "operator==",
          "brief": "operator==",
          "doc": "",
          "sections": [],
          "anchors": [],
          "member_type": "function",
          "parent": "N",
          "relates": "",
          "header": "file--operator-h",
          "group": "",
          "deprecated": false,
          "templated": false,
          "constexpr": false,
          "return_type": {
            "typename": "bool",
            "qualifiers": "",
            "id": ""
          },
          "arguments": [
            {
              "typename": "N::A",
              "qualifiers": "const&",
              "name": "a",
              "default": null,
              "id": "N-A"
            },
            {
              "typename": "N::A",
              "qualifiers": "const&",
              "name": "b",
              "default": null,
              "id": "N-A"
            }
          ]
        },
        {
          "id": "N-operator%22%22_w-long double-",
          "name": "operator\"\"_w",
          "brief": "operator \"\" _w() allows us to write `34.5_w` to create an object of type [`A`](#N-A).",
          "doc": "",
          "sections": [],
          "anchors": [],
          "member_type": "function",
          "parent": "N",
          "relates": "",
          "header": "file--operator-h",
          "group": "",
          "deprecated": false,
          "templated": false,
          "constexpr": false,
          "return_type": {
            "typename": "N::A",
            "qualifiers": "",
            "id": "N-A"
          },
          "arguments": [
            {
              "typename": "long double",
              "qualifiers": "",
              "name": "",
              "default": null,
              "id": ""
            }
          ]
        }
      ]
    },
    {
      "id": "operator%20new-size_t-",
      "name": "operator new",
      "brief": "",
      "doc": "",
      "sections": [],
      "anchors": [],
      "member_type": "function",
      "parent": "",
      "relates": "",
      "header": "file--operator-h",
      "group": "",
      "deprecated": false,
      "templated": false,
      "constexpr": false,
      "return_type": {
        "typename": "void",
        "qualifiers": "*",
        "id": ""
      },
      "arguments": [
        {
          "typename": "size_t",
          "qualifiers": "",
          "name": "",
          "default": null,
          "id": ""
        }
      ]
    },
    {
      "id": "operator%20new%5B%5D-size_t-",
      "name": "operator new[]",
      "brief": "",
      "doc": "",
      "sections": [],
      "anchors": [],
      "member_type": "function",
      "parent": "",
      "relates": "",
      "header": "file--operator-h",
      "group": "",
      "deprecated": false,
      "templated": false,
      "constexpr": false,
      "return_type": {
        "typename": "void",
        "qualifiers": "*",
        "id": ""
      },
      "arguments": [
        {
          "typename": "size_t",
          "qualifiers": "",
          "name": "",
          "default": null,
          "id": ""
        }
      ]
    },
    {
      "id": "operator%20delete-void-P",
      "name": "operator delete",
      "brief": "",
      "doc": "",
      "sections": [],
      "anchors": [],
      "member_type": "function",
      "parent": "",
      "relates": "",
      "header": "file--operator-h",
      "group": "",
      "deprecated": false,
      "templated": false,
      "constexpr": false,
      "return_type": {
        "typename": "void",
        "qualifiers": "",
        "id": ""
      },
      "arguments": [
        {
          "typename": "void",
          "qualifiers": "*",
          "name": "",
          "default": null,
          "id": ""
        }
      ]
    },
    {
      "id": "operator%20delete%5B%5D-void-P",
      "name": "operator delete[]",
      "brief": "",
      "doc": "",
      "sections": [],
      "anchors": [],
      "member_type": "function",
      "parent": "",
      "relates": "",
      "header": "file--operator-h",
      "group": "",
      "deprecated": false,
      "templated": false,
      "constexpr": false,
      "return_type": {
        "typename": "void",
        "qualifiers": "",
        "id": ""
      },
      "arguments": [
        {
          "typename": "void",
          "qualifiers": "*",
          "name": "",
          "default": null,
          "id": ""
        }
      ]
    }
  ],
  "headers": [
    {
      "id": "file--operator-h",
      "name": "operator.h",
      "brief": "",
      "doc": "",
      "sections": [],
      "anchors": [],
      "includes": [
        "<new>"
      ]
    }
  ],
  "groups": [],
  "pages": []
}